module alu (
    input alufn[6],
    input op1[8],
    input op2[8],
    output r_op1[8],
    output r_op2[8],
    output out[8]
  ) {
  
  // Initialize all submodules with the appropriate inputs
  .op1(op1), .op2(op2), .alufn(alufn) {
    adder adder;
    boolean boolean;
  }
  shifter shifter(.alufn(alufn), .op1(op1), .op2(op2[4:0]));
  compare compare(.alufn(alufn));
  
  always {
    // Set default outputs
    out = 8hxx;
    r_op1 = op1; // allows us to read op1
    r_op2 = op2; // allows us to read op2
    
    compare.z = adder.zOut;
    compare.n = adder.nOut;
    compare.v = adder.vOut;
    
    // Select appropriate submodule based on first 2 bits in alufn
    case(alufn[5:4]) {
      b00:
        out = adder.out;
      b01:
        out = boolean.out;
      b10:
        out = shifter.out;
      b11:
        out = compare.out;
    }
  }
}